{"version":3,"sources":["firebaseConfig.js","mixins/toggleMobile.js","views/home.js","views/connect.js","components/qaItem.js","views/about.js","components/projectsList.js","views/projects.js","components/nav.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","databaseURL","storageBucket","toggleMobile","document","querySelector","classList","toggle","Home","useState","pageData","setPageData","useEffect","database","ref","once","then","snapshot","child","val","result","page","className","contentClass","style","backgroundImage","background","title","tagline","onClick","Connect","contactItems","setContactItems","items","map","item","idx","key","href","link","src","icon","alt","email","QaItem","props","makeAnswerClassName","makeQuestionClassName","qas","qa","toggleAnswer","question","answer","About","aboutItems","setAboutItems","ProjectsList","projectItems","setProjectItems","filterApplied","setFilters","length","matchedItems","filter","project","categories","indexOf","toLowerCase","projects","target","rel","description","image","resetAll","filterClassName","includes","filterComp","tag","Projects","AppRouter","to","path","exact","component","App","Component","render","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4fb350e2.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nvar config = {\n    apiKey: 'AIzaSyDt7EQc_GVKqPHWGtw_nT6osO63hOB4cIs',\n    databaseURL: 'https://cartercapo-a6615.firebaseio.com/',\n    storageBucket: 'cartercapo-a6615'\n}\n\nlet db = firebase.initializeApp(config);\n\nexport default db;","const toggleMobile = () => {\n    document.querySelector('.header').classList.toggle('open');\n    document.querySelector('.navicon').classList.toggle('active');\n}\n\nexport default toggleMobile;","import db from \"../firebaseConfig\";\nimport React, { useEffect, useState } from \"react\";\nimport toggleMobile from \"../mixins/toggleMobile\";\n\nfunction Home() {\n  const [pageData, setPageData] = useState([]);\n\n  useEffect(() => {\n    db.database()\n      .ref()\n      .once(\"value\")\n      .then(function(snapshot) {\n        return snapshot.child(\"home\").val();\n      })\n      .then(result => {\n        setPageData(result.page);\n      });\n  }, [pageData]);\n\n  return (\n    <div\n      className={pageData ? pageData.contentClass : \"\"}\n      style={{ backgroundImage: `url(${pageData ? pageData.background : \"\"})` }}\n    >\n      <h2>{pageData ? pageData.title : \"\"}</h2>\n      <p className=\"tagline\">{pageData ? pageData.tagline : \"\"}</p>\n      <div className=\"main\"></div>\n      <div className=\"navicon\" onClick={() => toggleMobile()}></div>\n    </div>\n  );\n}\n\nexport default Home;\n","import db from \"../firebaseConfig\";\nimport React, { useEffect, useState } from \"react\";\nimport toggleMobile from \"../mixins/toggleMobile\";\n\nfunction Connect() {\n  const [pageData, setPageData] = useState([]);\n  const [contactItems, setContactItems] = useState([]);\n\n  useEffect(() => {\n    db.database()\n      .ref()\n      .once(\"value\")\n      .then(function(snapshot) {\n        return snapshot.child(\"contact\").val();\n      })\n      .then(result => {\n        setPageData(result.page);\n        setContactItems(result.contactItems);\n      });\n  }, [contactItems]);\n\n  let items = contactItems.map((item, idx) => {\n    return (\n      <div key={idx} className=\"contactItem\">\n        <p className=\"title\">{item.title}</p>\n        <a className=\"project--item__link\" href={item.link}>\n          <img src={item.icon} alt={item.email}></img>\n        </a>\n      </div>\n    );\n  });\n\n  return (\n    <div\n      className={pageData ? pageData.contentClass : \"\"}\n      style={{\n        backgroundImage: `url(${pageData ? pageData.background : \"\"})`\n      }}\n    >\n      <h2>{pageData ? pageData.title : \"\"}</h2>\n      <p className=\"tagline\">{pageData ? pageData.title : \"\"}</p>\n      <div className=\"main\"></div>\n      <div className=\"navicon\" onClick={() => toggleMobile()}></div>\n      <div className=\"contact\">{items}</div>\n    </div>\n  );\n}\n\nexport default Connect;\n","import React from \"react\";\n\nfunction QaItem(props) {\n  const questionClass = \"content-item--question\";\n  const answerClass = \"content-item--answer\";\n\n  function toggleAnswer(idx) {\n    document.querySelector(`.${answerClass}-${idx}`).classList.toggle(\"open\");\n    document\n      .querySelector(`.${questionClass}-${idx}`)\n      .classList.toggle(\"js_arrow_rotate\");\n  }\n\n  function makeAnswerClassName(idx) {\n    return `${answerClass} ${answerClass}-${idx}`;\n  }\n\n  function makeQuestionClassName(idx) {\n    return `${questionClass} ${questionClass}-${idx}`;\n  }\n\n  const items = props.qas.map((qa, idx) => (\n    <div key={idx} className=\"content-item\" onClick={() => toggleAnswer(idx)}>\n      <div className={makeQuestionClassName(idx)}>{qa.question}</div>\n      <div className={makeAnswerClassName(idx)}>{qa.answer}</div>\n    </div>\n  ));\n\n  return <div>{items}</div>;\n}\n\nexport default QaItem;\n","import db from \"../firebaseConfig\";\nimport React, { useState, useEffect } from \"react\";\nimport Qaitems from \"../components/qaItem\";\nimport toggleMobile from \"../mixins/toggleMobile\";\n\nfunction About() {\n  const [pageData, setPageData] = useState([]);\n  const [aboutItems, setAboutItems] = useState([]);\n\n  useEffect(() => {\n    db.database()\n      .ref()\n      .once(\"value\")\n      .then(function(snapshot) {\n        return snapshot.child(\"about\").val();\n      })\n      .then(result => {\n        setPageData(result.page);\n        setAboutItems(result.aboutItems);\n      });\n  }, [...aboutItems]);\n\n  return (\n    <div\n      className={pageData ? pageData.contentClass : \"\"}\n      style={{\n        backgroundImage: `url(${pageData ? pageData.background : \"\"})`\n      }}\n    >\n      <h2>{pageData ? pageData.title : \"\"}</h2>\n      <p className=\"tagline\">{pageData ? pageData.tagline : \"\"}</p>\n      <div className=\"main\"></div>\n      <div className=\"navicon\" onClick={() => toggleMobile()}></div>\n      <div className=\"qa\">\n        <Qaitems qas={aboutItems ? aboutItems : []} />\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n","import React, { useState, useEffect } from \"react\";\n\nfunction ProjectsList(props) {\n  const [projectItems, setProjectItems] = useState([]);\n  const [filterApplied, setFilters] = useState([]);\n\n  useEffect(() => {\n    setProjectItems(props.projectItems);\n  }, [props.projectItems]);\n\n  useEffect(() => {\n    if (filterApplied.length > 0) {\n      let matchedItems = props.projectItems.filter(\n        project => project.categories.indexOf(filterApplied.toLowerCase()) >= 0\n      );\n      setProjectItems(matchedItems);\n    }\n  }, [filterApplied]);\n\n  const projects = projectItems.map((project, idx) => (\n    <a\n      className=\"project--item__link\"\n      href={project.link}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      key={idx}\n    >\n      <div className=\"project--item\">\n        <h3 className=\"project--item__title\">{project.title}</h3>\n        <p className=\"project--item__description\">{project.description}</p>\n        <div\n          className=\"background\"\n          style={{ backgroundImage: `url(${project.image})` }}\n        ></div>\n      </div>\n    </a>\n  ));\n\n  const filters = [\n    \"JavaScript\",\n    \"HTML5\",\n    \"PHP\",\n    \"MySQL\",\n    \"CSS\",\n    \"Art\",\n    \"Game\",\n    \"Vue\"\n  ];\n\n  const resetAll = () => {\n    setProjectItems(props.projectItems);\n    setFilters([]);\n  };\n\n  const applyFilters = tag => {\n    if (filterApplied === tag) {\n      resetAll();\n    } else {\n      setFilters(tag);\n    }\n  };\n\n  const filterClassName = filter => {\n    let className = filterApplied.includes(filter)\n      ? \"filters-group__filter active\"\n      : \"filters-group__filter\";\n    return className;\n  };\n\n  const filterComp = filters.map((filter, idx) => (\n    <div\n      className={filterClassName(filter)}\n      onClick={() => applyFilters(filter)}\n      key={idx}\n    >\n      {filter}\n    </div>\n  ));\n\n  return (\n    <div className=\"projects-wrapper\">\n      <div className=\"filters\">\n        <div className=\"filters-title\">Filters:</div>\n        <div className=\"filters-group\">\n          {filterComp}\n          <div\n            className=\"filters--clear filters-group__filter\"\n            onClick={resetAll}\n          >\n            Clear Filters\n          </div>\n        </div>\n      </div>\n      <div className=\"project\">\n        {projects.length > 0 ? (\n          projects\n        ) : (\n          <div className=\"filters-title\">No Matches Found</div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectsList;\n","import db from \"../firebaseConfig\";\nimport React, { useEffect, useState } from \"react\";\nimport Projectlist from \"../components/projectsList\";\nimport toggleMobile from \"../mixins/toggleMobile\";\n\nfunction Projects() {\n  const [pageData, setPageData] = useState([]);\n  const [projectItems, setProjectItems] = useState([]);\n\n  useEffect(() => {\n    db.database()\n      .ref()\n      .once(\"value\")\n      .then(function(snapshot) {\n        return snapshot.child(\"projects\").val();\n      })\n      .then(result => {\n        setPageData(result.page);\n        setProjectItems(result.projectItems);\n      });\n  }, [...projectItems]);\n  return (\n    <div\n      className={pageData ? pageData.contentClass : \"\"}\n      style={{\n        backgroundImage: `url(${pageData ? pageData.background : \"\"})`\n      }}\n    >\n      <h2>{pageData ? pageData.title : \"\"}</h2>\n      <p className=\"tagline\">{pageData ? pageData.tagline : \"\"}</p>\n      <div className=\"main\"></div>\n      <div className=\"navicon\" onClick={() => toggleMobile()}></div>\n      <Projectlist\n        projectItems={projectItems ? projectItems : []}\n      ></Projectlist>\n    </div>\n  );\n}\n\nexport default Projects;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Home from '../views/home'\nimport Connect from '../views/connect'\nimport About from '../views/about'\nimport Projects from '../views/projects'\n\nfunction AppRouter() {\n    return (\n        <Router>\n            <header className=\"header\">\n                <Link to=\"/\" className=\"section Carter Capocaccia section-home\">\n                    <p className=\"title\"> Home </p>\n                </Link>\n                <Link to=\"/about\" className=\"section Carter Capocaccia section-second\">\n                    <p className=\"title\">About</p>\n                </Link>\n                <Link to='/projects' className=\"section Carter Capocaccia section-first\">\n                    <p className=\"title\"> Projects </p>\n                </Link>\n                <Link to=\"/connect\" className=\"section Carter Capocaccia section-third\">\n                    <p className=\"title\"> Connect </p>\n                </Link>\n            </header>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/connect\" component={Connect} />\n            <Route path=\"/projects\" component={Projects} />\n        </Router>\n    );\n}\n\nexport default AppRouter;","import React, { Component } from 'react';\nimport './App.scss';\nimport Nav from './components/nav'\n\n\nclass App extends Component {\n\n  render() {\n    return (\n        <div>\n            <Nav>\n            </Nav>\n        </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}