{"version":3,"sources":["firebaseConfig.js","mixins/toggleMobile.js","views/home.js","views/connect.js","components/qaItem.js","views/about.js","components/projectsList.js","views/projects.js","components/nav.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","databaseURL","storageBucket","toggleMobile","document","querySelector","classList","toggle","Home","_useState","useState","_useState2","Object","slicedToArray","pageData","setPageData","useEffect","database","ref","once","then","snapshot","child","val","result","page","react_default","a","createElement","className","contentClass","style","backgroundImage","concat","background","title","tagline","onClick","Connect","_useState3","_useState4","contactItems","setContactItems","items","map","item","idx","key","href","link","src","icon","alt","email","qaItem","questionClass","answerClass","makeAnswerClassName","makeQuestionClassName","this","props","qas","qa","toggleAnswer","question","answer","About","aboutItems","setAboutItems","toConsumableArray","components_qaItem","projectsList","projectItems","setProjectItems","filterApplied","setFilters","length","matchedItems","filter","project","categories","indexOf","toLowerCase","projects","target","rel","description","image","resetAll","filterClassName","includes","filterComp","tag","Projects","components_projectsList","AppRouter","react_router_dom","to","react_router","path","exact","component","App","nav","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e49026b.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nvar config = {\n    apiKey: 'AIzaSyDt7EQc_GVKqPHWGtw_nT6osO63hOB4cIs',\n    databaseURL: 'https://cartercapo-a6615.firebaseio.com/',\n    storageBucket: 'cartercapo-a6615'\n}\n\nlet db = firebase.initializeApp(config);\n\nexport default db;","const toggleMobile = () => {\n    document.querySelector('.header').classList.toggle('open');\n    document.querySelector('.navicon').classList.toggle('active');\n}\n\nexport default toggleMobile;","import db from \"../firebaseConfig\";\nimport React, { useEffect, useState } from \"react\";\nimport toggleMobile from \"../mixins/toggleMobile\";\n\nfunction Home() {\n  const [pageData, setPageData] = useState([]);\n\n  useEffect(() => {\n    db.database()\n      .ref()\n      .once(\"value\")\n      .then(function(snapshot) {\n        return snapshot.child(\"home\").val();\n      })\n      .then(result => {\n        setPageData(result.page);\n      });\n  }, [pageData]);\n\n  return (\n    <div\n      className={pageData ? pageData.contentClass : \"\"}\n      style={{ backgroundImage: `url(${pageData ? pageData.background : \"\"})` }}\n    >\n      <h2>{pageData ? pageData.title : \"\"}</h2>\n      <p className=\"tagline\">{pageData ? pageData.tagline : \"\"}</p>\n      <div className=\"main\"></div>\n      <div className=\"navicon\" onClick={() => toggleMobile()}></div>\n    </div>\n  );\n}\n\nexport default Home;\n","import db from \"../firebaseConfig\";\nimport React, { useEffect, useState } from \"react\";\nimport toggleMobile from \"../mixins/toggleMobile\";\n\nfunction Connect() {\n  const [pageData, setPageData] = useState([]);\n  const [contactItems, setContactItems] = useState([]);\n\n  useEffect(() => {\n    db.database()\n      .ref()\n      .once(\"value\")\n      .then(function(snapshot) {\n        return snapshot.child(\"contact\").val();\n      })\n      .then(result => {\n        setPageData(result.page);\n        setContactItems(result.contactItems);\n      });\n  }, [contactItems]);\n\n  let items = contactItems.map((item, idx) => {\n    return (\n      <div key={idx} className=\"contactItem\">\n        <p className=\"title\">{item.title}</p>\n        <a className=\"project--item__link\" href={item.link}>\n          <img src={item.icon} alt={item.email}></img>\n        </a>\n      </div>\n    );\n  });\n\n  return (\n    <div\n      className={pageData ? pageData.contentClass : \"\"}\n      style={{\n        backgroundImage: `url(${pageData ? pageData.background : \"\"})`\n      }}\n    >\n      <h2>{pageData ? pageData.title : \"\"}</h2>\n      <p className=\"tagline\">{pageData ? pageData.title : \"\"}</p>\n      <div className=\"main\"></div>\n      <div className=\"navicon\" onClick={() => toggleMobile()}></div>\n      <div className=\"contact\">{items}</div>\n    </div>\n  );\n}\n\nexport default Connect;\n","import React from \"react\";\n\nfunction qaItem() {\n  const questionClass = \"content-item--question\";\n  const answerClass = \"content-item--answer\";\n\n  function toggleAnswer(idx) {\n    document.querySelector(`.${answerClass}-${idx}`).classList.toggle(\"open\");\n    document\n      .querySelector(`.${questionClass}-${idx}`)\n      .classList.toggle(\"js_arrow_rotate\");\n  }\n\n  function makeAnswerClassName(idx) {\n    return `${answerClass} ${answerClass}-${idx}`;\n  }\n\n  function makeQuestionClassName(idx) {\n    return `${questionClass} ${questionClass}-${idx}`;\n  }\n\n  const items = this.props.qas.map((qa, idx) => (\n    <div key={idx} className=\"content-item\" onClick={() => toggleAnswer(idx)}>\n      <div className={makeQuestionClassName(idx)}>{qa.question}</div>\n      <div className={makeAnswerClassName(idx)}>{qa.answer}</div>\n    </div>\n  ));\n\n  return <div>{items}</div>;\n}\n\nexport default qaItem;\n","import db from \"../firebaseConfig\";\nimport React, { useState, useEffect } from \"react\";\nimport Qaitems from \"../components/qaItem\";\nimport toggleMobile from \"../mixins/toggleMobile\";\n\nfunction About() {\n  const [pageData, setPageData] = useState([]);\n  const [aboutItems, setAboutItems] = useState([]);\n\n  useEffect(() => {\n    db.database()\n      .ref()\n      .once(\"value\")\n      .then(function(snapshot) {\n        return snapshot.child(\"about\").val();\n      })\n      .then(result => {\n        setPageData(result.page);\n        setAboutItems(result.aboutItems);\n      });\n  }, [...aboutItems]);\n\n  return (\n    <div\n      className={pageData ? pageData.contentClass : \"\"}\n      style={{\n        backgroundImage: `url(${pageData ? pageData.background : \"\"})`\n      }}\n    >\n      <h2>{pageData ? pageData.title : \"\"}</h2>\n      <p className=\"tagline\">{pageData ? pageData.tagline : \"\"}</p>\n      <div className=\"main\"></div>\n      <div className=\"navicon\" onClick={() => toggleMobile()}></div>\n      <div className=\"qa\">\n        <Qaitems qas={aboutItems ? aboutItems : []} />\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n","import React, { useState, useEffect } from \"react\";\n\nfunction projectsList(props) {\n  const [projectItems, setProjectItems] = useState([]);\n  const [filterApplied, setFilters] = useState([]);\n\n  useEffect(() => {\n    setProjectItems(props.projectItems);\n  }, [props.projectItems]);\n\n  useEffect(() => {\n    if (filterApplied.length > 0) {\n      let matchedItems = props.projectItems.filter(\n        project => project.categories.indexOf(filterApplied.toLowerCase()) >= 0\n      );\n      setProjectItems(matchedItems);\n    }\n  }, [filterApplied]);\n\n  const projects = projectItems.map((project, idx) => (\n    <a\n      className=\"project--item__link\"\n      href={project.link}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      key={idx}\n    >\n      <div className=\"project--item\">\n        <h3 className=\"project--item__title\">{project.title}</h3>\n        <p className=\"project--item__description\">{project.description}</p>\n        <div\n          className=\"background\"\n          style={{ backgroundImage: `url(${project.image})` }}\n        ></div>\n      </div>\n    </a>\n  ));\n\n  const filters = [\n    \"JavaScript\",\n    \"HTML5\",\n    \"PHP\",\n    \"MySQL\",\n    \"CSS\",\n    \"Art\",\n    \"Game\",\n    \"Vue\"\n  ];\n\n  const resetAll = () => {\n    setProjectItems(props.projectItems);\n    setFilters([]);\n  };\n\n  const applyFilters = tag => {\n    if (filterApplied === tag) {\n      resetAll();\n    } else {\n      setFilters(tag);\n    }\n  };\n\n  const filterClassName = filter => {\n    let className = filterApplied.includes(filter)\n      ? \"filters-group__filter active\"\n      : \"filters-group__filter\";\n    return className;\n  };\n\n  const filterComp = filters.map((filter, idx) => (\n    <div\n      className={filterClassName(filter)}\n      onClick={() => applyFilters(filter)}\n      key={idx}\n    >\n      {filter}\n    </div>\n  ));\n\n  return (\n    <div className=\"projects-wrapper\">\n      <div className=\"filters\">\n        <div className=\"filters-title\">Filters:</div>\n        <div className=\"filters-group\">\n          {filterComp}\n          <div\n            className=\"filters--clear filters-group__filter\"\n            onClick={resetAll}\n          >\n            Clear Filters\n          </div>\n        </div>\n      </div>\n      <div className=\"project\">\n        {projects.length > 0 ? (\n          projects\n        ) : (\n          <div className=\"filters-title\">No Matches Found</div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default projectsList;\n","import db from \"../firebaseConfig\";\nimport React, { useEffect, useState } from \"react\";\nimport Projectlist from \"../components/projectsList\";\nimport toggleMobile from \"../mixins/toggleMobile\";\n\nfunction Projects() {\n  const [pageData, setPageData] = useState([]);\n  const [projectItems, setProjectItems] = useState([]);\n\n  useEffect(() => {\n    db.database()\n      .ref()\n      .once(\"value\")\n      .then(function(snapshot) {\n        return snapshot.child(\"projects\").val();\n      })\n      .then(result => {\n        setPageData(result.page);\n        setProjectItems(result.projectItems);\n      });\n  }, [...projectItems]);\n  return (\n    <div\n      className={pageData ? pageData.contentClass : \"\"}\n      style={{\n        backgroundImage: `url(${pageData ? pageData.background : \"\"})`\n      }}\n    >\n      <h2>{pageData ? pageData.title : \"\"}</h2>\n      <p className=\"tagline\">{pageData ? pageData.tagline : \"\"}</p>\n      <div className=\"main\"></div>\n      <div className=\"navicon\" onClick={() => toggleMobile()}></div>\n      <Projectlist\n        projectItems={projectItems ? projectItems : []}\n      ></Projectlist>\n    </div>\n  );\n}\n\nexport default Projects;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Home from '../views/home'\nimport Connect from '../views/connect'\nimport About from '../views/about'\nimport Projects from '../views/projects'\n\nfunction AppRouter() {\n    return (\n        <Router>\n            <header className=\"header\">\n                <Link to=\"/\" className=\"section Carter Capocaccia section-home\">\n                    <p className=\"title\"> Home </p>\n                </Link>\n                <Link to=\"/about\" className=\"section Carter Capocaccia section-second\">\n                    <p className=\"title\">About</p>\n                </Link>\n                <Link to='/projects' className=\"section Carter Capocaccia section-first\">\n                    <p className=\"title\"> Projects </p>\n                </Link>\n                <Link to=\"/connect\" className=\"section Carter Capocaccia section-third\">\n                    <p className=\"title\"> Connect </p>\n                </Link>\n            </header>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/connect\" component={Connect} />\n            <Route path=\"/projects\" component={Projects} />\n        </Router>\n    );\n}\n\nexport default AppRouter;","import React, { Component } from 'react';\nimport './App.scss';\nimport Nav from './components/nav'\n\n\nclass App extends Component {\n\n  render() {\n    return (\n        <div>\n            <Nav>\n            </Nav>\n        </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}