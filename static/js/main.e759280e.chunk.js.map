{"version":3,"sources":["firebaseConfig.js","mixins/toggleMobile.js","views/home.js","views/connect.js","components/qaItem.js","views/about.js","components/projectsList.js","views/projects.js","components/nav.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","databaseURL","storageBucket","toggleMobile","document","querySelector","classList","toggle","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pageData","_this2","database","ref","once","then","snapshot","child","val","result","setState","page","react_default","a","createElement","className","contentClass","style","backgroundImage","concat","background","title","tagline","onClick","Component","Connect","contactItems","items","map","item","idx","key","href","link","src","icon","alt","email","qaItem","questionClass","answerClass","makeAnswerClassName","makeQuestionClassName","props","qas","qa","toggleAnswer","question","answer","About","aboutItems","components_qaItem","projectsList","projectItems","filters","nextProps","length","projects","project","target","rel","description","image","removeFilter","tag","filter","toLowerCase","showAllProjects","applyFilters","includes","push","criteria","matchedItems","every","categories","indexOf","console","log","filterClassName","filterComp","Projects","projectItemsStore","components_projectsList","AppRouter","react_router_dom","to","react_router","path","exact","component","App","nav","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e759280e.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nvar config = {\n    apiKey: 'AIzaSyDt7EQc_GVKqPHWGtw_nT6osO63hOB4cIs',\n    databaseURL: 'https://cartercapo-a6615.firebaseio.com/',\n    storageBucket: 'cartercapo-a6615'\n}\n\nlet db = firebase.initializeApp(config);\n\nexport default db;","const toggleMobile = () => {\n    document.querySelector('.header').classList.toggle('open');\n    document.querySelector('.navicon').classList.toggle('active');\n}\n\nexport default toggleMobile;","import db from '../firebaseConfig'\nimport React, { Component } from 'react';\nimport toggleMobile from '../mixins/toggleMobile'\n\nclass Home extends Component {\n    constructor() {\n        super()\n        this.state = {\n            pageData: null\n        }\n    }\n    componentDidMount() {\n        db.database().ref().once('value').then(function(snapshot){\n            return snapshot.child('home').val();\n        }).then((result) => {\n            this.setState({\n                pageData: result.page\n            });\n        })\n    }\n    render() {\n        return (\n            <div className={this.state.pageData ? this.state.pageData.contentClass : ''}\n                 style={{backgroundImage: `url(${this.state.pageData ? this.state.pageData.background : ''})`}}>\n                <h2>{this.state.pageData ? this.state.pageData.title : ''}</h2>\n                <p className=\"tagline\">{this.state.pageData ? this.state.pageData.tagline : ''}</p>\n                <div className=\"main\"></div>\n                <div className=\"navicon\" onClick={() => toggleMobile()}></div>\n            </div>\n        )\n    }\n}\n\nexport default Home","import db from '../firebaseConfig'\nimport React, {Component} from 'react'\nimport toggleMobile from \"../mixins/toggleMobile\";\n\nclass Connect extends Component {\n    constructor() {\n        super()\n        this.state = {\n            pageData: null,\n            contactItems: []\n        }\n    }\n    componentDidMount() {\n        db.database().ref().once('value').then(function(snapshot){\n            return snapshot.child('contact').val();\n        }).then((result) => {\n            this.setState({\n                pageData: result.page,\n                contactItems: result.contactItems\n            });\n        })\n    }\n    render() {\n        let items = this.state.contactItems.map((item, idx) => {\n            return  <div key={idx} className='contactItem'>\n                <p className=\"title\">\n                    {item.title}\n                </p>\n                <a className=\"project--item__link\" href={item.link}>\n                    <img src={item.icon} alt={item.email}></img>\n                </a>\n            </div>\n        })\n\n        return (\n            <div className={this.state.pageData ? this.state.pageData.contentClass : ''}\n                 style={{backgroundImage: `url(${this.state.pageData ? this.state.pageData.background : ''})`}}>\n                <h2>{this.state.pageData ? this.state.pageData.title : ''}</h2>\n                <p className=\"tagline\">{this.state.pageData ? this.state.pageData.title : ''}</p>\n                <div className=\"main\"></div>\n                <div className=\"navicon\" onClick={() => toggleMobile()}></div>\n                <div className=\"contact\">\n                    {items}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Connect","import React, { Component } from 'react';\n\n\nclass qaItem extends Component {\n    render() {\n        const questionClass = 'content-item--question'\n        const answerClass = 'content-item--answer'\n\n        function toggleAnswer(idx){\n            document.querySelector(`.${answerClass}-${idx}`).classList.toggle('open')\n            document.querySelector(`.${questionClass}-${idx}`).classList.toggle('js_arrow_rotate');\n        }\n\n        function makeAnswerClassName(idx) {\n            return `${answerClass} ${answerClass}-${idx}`\n        }\n\n        function makeQuestionClassName(idx) {\n            return `${questionClass} ${questionClass}-${idx}`\n        }\n\n        const items = this.props.qas.map((qa, idx) =>\n            <div key={idx} className=\"content-item\" onClick={() => toggleAnswer(idx)}>\n                <div className={makeQuestionClassName(idx)}>\n                    {qa.question}\n                </div>\n                <div className={makeAnswerClassName(idx)}>\n                    {qa.answer}\n                </div>\n            </div>\n        )\n        return (\n            <div>\n                {items}\n            </div>\n        )\n    }\n}\n\nexport default qaItem","import db from '../firebaseConfig'\nimport React, { Component } from 'react';\nimport Qaitems from '../components/qaItem'\nimport toggleMobile from \"../mixins/toggleMobile\";\n\nclass About extends Component {\n    constructor() {\n        super()\n        this.state = {\n            pageData: null,\n            qa: null\n        }\n    }\n    componentDidMount() {\n        db.database().ref().once('value').then(function(snapshot){\n            return snapshot.child('about').val();\n        }).then((result) => {\n            this.setState({\n                pageData: result.page,\n                qa: result.aboutItems\n        });\n        })\n    }\n    render() {\n        return (\n            <div className={this.state.pageData ? this.state.pageData.contentClass : ''}\n                 style={{backgroundImage: `url(${this.state.pageData ? this.state.pageData.background : ''})`}}>\n                <h2>{this.state.pageData ? this.state.pageData.title : '' }</h2>\n                <p className=\"tagline\">{this.state.pageData ? this.state.pageData.tagline : '' }</p>\n                <div className=\"main\"></div>\n                <div className=\"navicon\" onClick={() => toggleMobile()}></div>\n                <div className=\"qa\">\n                    <Qaitems qas={this.state.qa ? this.state.qa : []}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default About\n\n\n","import React, { Component } from 'react';\n\nclass projectsList extends Component {\n    constructor() {\n        super()\n        this.state = {\n            projectItems: [],\n            filters: []\n        }\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.projectItems.length !== this.props.projectItems.length){\n            this.setState({\n                projectItems: nextProps.projectItems\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.setState( {\n            projectItems: this.props.projectItems\n        })\n    }\n\n    render() {\n\n        const projects = this.state.projectItems.map((project, idx) =>\n            <a className=\"project--item__link\" href={project.link} target=\"_blank\" rel=\"noopener noreferrer\" key={idx}>\n                <div className=\"project--item\">\n                    <h3 className=\"project--item__title\">\n                        {project.title}\n                    </h3>\n                    <p className=\"project--item__description\">\n                        {project.description}\n                    </p>\n                    <div className=\"background\" style={{backgroundImage: `url(${project.image})`}}>\n                    </div>\n                </div>\n            </a>\n        )\n\n        const filters = ['JavaScript', 'HTML5', 'PHP', 'MySQL', 'CSS', 'Art', 'Game', 'Vue' ]\n\n        const removeFilter = (tag) => {\n            //return all filters that dont match the tag\n            let result = this.state.filters.filter((item) => item.toLowerCase() !== tag.toLowerCase())\n\n            //if there are no filters applied after the removal, show all projects\n            if(result.length === 0) {\n                showAllProjects()\n            } else {\n                //if there are filters still applied, reset the filters\n                this.setState({\n                    filters: result\n                })\n\n                applyFilters(false)\n            }\n        }\n\n        const showAllProjects = () => {\n            this.setState({\n                projectItems: this.props.projectItems\n            })\n        }\n\n        const resetAll = () => {\n            this.setState({\n                projectItems: this.props.projectItems,\n                filters: []\n            })\n        }\n\n        const applyFilters = (tag) => {\n            if(tag && this.state.filters.includes(tag)) {\n                removeFilter(tag)\n            } else if(tag) {\n                this.state.filters.push(tag)\n            }\n\n            let criteria = this.state.filters\n            // if there are filters applied, then filter\n\n            if (criteria.length > 0) {\n\n                let matchedItems = this.props.projectItems.filter((project) => criteria.every((criteria) => project.categories.indexOf(criteria.toLowerCase()) >= 0))\n\n                console.log(matchedItems)\n\n                this.setState({\n                    projectItems: matchedItems\n                })\n\n            }\n\n        }\n\n        const filterClassName = (filter) => {\n            let className = this.state.filters.includes(filter) ? 'filters-group__filter active' : 'filters-group__filter'\n            return className\n        }\n\n        const filterComp = filters.map((filter, idx) =>\n            <div className={filterClassName(filter)}\n                 onClick={() => applyFilters(filter)}\n                 key={idx}>\n                {filter}\n            </div>\n        )\n\n        return (\n            <div className='projects-wrapper'>\n                <div className=\"filters\">\n                    <div className=\"filters-title\">\n                        Filters:\n                    </div>\n                    <div className=\"filters-group\">\n                        {filterComp}\n                        <div className=\"filters--clear filters-group__filter\" onClick={resetAll}>\n                            Clear Filters\n                        </div>\n                    </div>\n                </div>\n                <div className=\"project\">\n                    {projects.length > 0 ? projects : <div className=\"filters-title\">No Matches Found</div>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default projectsList","import db from '../firebaseConfig'\nimport React, { Component } from 'react';\nimport Projectlist from '../components/projectsList'\nimport toggleMobile from '../mixins/toggleMobile'\n\nclass Projects extends Component {\n    constructor() {\n        super()\n        this.state = {\n            pageData: null,\n            projectItems: null,\n            projectItemsStore: null\n        }\n    }\n    componentDidMount() {\n        db.database().ref().once('value').then(function(snapshot){\n            return snapshot.child('projects').val();\n        }).then((result) => {\n            this.setState({\n                pageData: result.page,\n                projectItems: result.projectItems,\n                projectItemsStore: result.projectItems\n            });\n        })\n    }\n    render() {\n        return (\n            <div className={this.state.pageData ? this.state.pageData.contentClass : ''}\n                 style={{backgroundImage: `url(${this.state.pageData ? this.state.pageData.background : ''})`}}>\n                <h2>{this.state.pageData ? this.state.pageData.title : ''}</h2>\n                <p className=\"tagline\">{this.state.pageData ? this.state.pageData.tagline : ''}</p>\n                <div className=\"main\"></div>\n                <div className=\"navicon\" onClick={() => toggleMobile()}></div>\n                <Projectlist projectItems={this.state.projectItems ? this.state.projectItems : []}>\n                </Projectlist>\n            </div>\n        )\n    }\n}\n\nexport default Projects","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Home from '../views/home'\nimport Connect from '../views/connect'\nimport About from '../views/about'\nimport Projects from '../views/projects'\n\nfunction AppRouter() {\n    return (\n        <Router>\n            <header className=\"header\">\n                <Link to=\"/\" className=\"section Carter Capocaccia section-home\">\n                    <p className=\"title\"> Home </p>\n                </Link>\n                <Link to=\"/about\" className=\"section Carter Capocaccia section-second\">\n                    <p className=\"title\">About</p>\n                </Link>\n                <Link to=\"/connect\" className=\"section Carter Capocaccia section-third\">\n                    <p className=\"title\"> Connect </p>\n                </Link>\n                <Link to='/projects' className=\"section Carter Capocaccia section-first\">\n                    <p className=\"title\"> Projects </p>\n                </Link>\n            </header>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/connect\" component={Connect} />\n            <Route path=\"/projects\" component={Projects} />\n        </Router>\n    );\n}\n\nexport default AppRouter;","import React, { Component } from 'react';\nimport './App.scss';\nimport Nav from './components/nav'\n\n\nclass App extends Component {\n\n  render() {\n    return (\n        <div>\n            <Nav>\n            </Nav>\n        </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}